// Code generated by protoc-gen-go. DO NOT EDIT.
// source: auth.proto

package authproto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ThirdPartyAuth_Provider int32

const (
	ThirdPartyAuth_GOOGLE   ThirdPartyAuth_Provider = 0
	ThirdPartyAuth_FACEBOOK ThirdPartyAuth_Provider = 1
)

var ThirdPartyAuth_Provider_name = map[int32]string{
	0: "GOOGLE",
	1: "FACEBOOK",
}

var ThirdPartyAuth_Provider_value = map[string]int32{
	"GOOGLE":   0,
	"FACEBOOK": 1,
}

func (x ThirdPartyAuth_Provider) String() string {
	return proto.EnumName(ThirdPartyAuth_Provider_name, int32(x))
}

func (ThirdPartyAuth_Provider) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0, 0}
}

// The request message sign in detail.
type ThirdPartyAuth struct {
	Provider             ThirdPartyAuth_Provider `protobuf:"varint,1,opt,name=provider,proto3,enum=authproto.ThirdPartyAuth_Provider" json:"provider,omitempty"`
	IdToken              string                  `protobuf:"bytes,2,opt,name=id_token,json=idToken,proto3" json:"id_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ThirdPartyAuth) Reset()         { *m = ThirdPartyAuth{} }
func (m *ThirdPartyAuth) String() string { return proto.CompactTextString(m) }
func (*ThirdPartyAuth) ProtoMessage()    {}
func (*ThirdPartyAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{0}
}

func (m *ThirdPartyAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ThirdPartyAuth.Unmarshal(m, b)
}
func (m *ThirdPartyAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ThirdPartyAuth.Marshal(b, m, deterministic)
}
func (m *ThirdPartyAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ThirdPartyAuth.Merge(m, src)
}
func (m *ThirdPartyAuth) XXX_Size() int {
	return xxx_messageInfo_ThirdPartyAuth.Size(m)
}
func (m *ThirdPartyAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_ThirdPartyAuth.DiscardUnknown(m)
}

var xxx_messageInfo_ThirdPartyAuth proto.InternalMessageInfo

func (m *ThirdPartyAuth) GetProvider() ThirdPartyAuth_Provider {
	if m != nil {
		return m.Provider
	}
	return ThirdPartyAuth_GOOGLE
}

func (m *ThirdPartyAuth) GetIdToken() string {
	if m != nil {
		return m.IdToken
	}
	return ""
}

// The request message sign in detail.
type TagoAuth struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagoAuth) Reset()         { *m = TagoAuth{} }
func (m *TagoAuth) String() string { return proto.CompactTextString(m) }
func (*TagoAuth) ProtoMessage()    {}
func (*TagoAuth) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{1}
}

func (m *TagoAuth) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagoAuth.Unmarshal(m, b)
}
func (m *TagoAuth) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagoAuth.Marshal(b, m, deterministic)
}
func (m *TagoAuth) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagoAuth.Merge(m, src)
}
func (m *TagoAuth) XXX_Size() int {
	return xxx_messageInfo_TagoAuth.Size(m)
}
func (m *TagoAuth) XXX_DiscardUnknown() {
	xxx_messageInfo_TagoAuth.DiscardUnknown(m)
}

var xxx_messageInfo_TagoAuth proto.InternalMessageInfo

func (m *TagoAuth) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TagoAuth) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The request message sign up detail.
type TagoRegister struct {
	Username             string   `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TagoRegister) Reset()         { *m = TagoRegister{} }
func (m *TagoRegister) String() string { return proto.CompactTextString(m) }
func (*TagoRegister) ProtoMessage()    {}
func (*TagoRegister) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{2}
}

func (m *TagoRegister) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TagoRegister.Unmarshal(m, b)
}
func (m *TagoRegister) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TagoRegister.Marshal(b, m, deterministic)
}
func (m *TagoRegister) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TagoRegister.Merge(m, src)
}
func (m *TagoRegister) XXX_Size() int {
	return xxx_messageInfo_TagoRegister.Size(m)
}
func (m *TagoRegister) XXX_DiscardUnknown() {
	xxx_messageInfo_TagoRegister.DiscardUnknown(m)
}

var xxx_messageInfo_TagoRegister proto.InternalMessageInfo

func (m *TagoRegister) GetUsername() string {
	if m != nil {
		return m.Username
	}
	return ""
}

func (m *TagoRegister) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

// The response message containing result string
type AuthResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AuthResponse) Reset()         { *m = AuthResponse{} }
func (m *AuthResponse) String() string { return proto.CompactTextString(m) }
func (*AuthResponse) ProtoMessage()    {}
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8bbd6f3875b0e874, []int{3}
}

func (m *AuthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AuthResponse.Unmarshal(m, b)
}
func (m *AuthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AuthResponse.Marshal(b, m, deterministic)
}
func (m *AuthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AuthResponse.Merge(m, src)
}
func (m *AuthResponse) XXX_Size() int {
	return xxx_messageInfo_AuthResponse.Size(m)
}
func (m *AuthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_AuthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_AuthResponse proto.InternalMessageInfo

func (m *AuthResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterEnum("authproto.ThirdPartyAuth_Provider", ThirdPartyAuth_Provider_name, ThirdPartyAuth_Provider_value)
	proto.RegisterType((*ThirdPartyAuth)(nil), "authproto.ThirdPartyAuth")
	proto.RegisterType((*TagoAuth)(nil), "authproto.TagoAuth")
	proto.RegisterType((*TagoRegister)(nil), "authproto.TagoRegister")
	proto.RegisterType((*AuthResponse)(nil), "authproto.AuthResponse")
}

func init() { proto.RegisterFile("auth.proto", fileDescriptor_8bbd6f3875b0e874) }

var fileDescriptor_8bbd6f3875b0e874 = []byte{
	// 335 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x90, 0xcf, 0x4a, 0xf3, 0x40,
	0x14, 0xc5, 0x3b, 0xdf, 0xa2, 0xdf, 0xf4, 0x52, 0x4a, 0x19, 0xd1, 0xfe, 0x59, 0x95, 0x20, 0xd2,
	0x55, 0x16, 0x75, 0xa9, 0x14, 0x1a, 0x69, 0xab, 0x28, 0xa4, 0xa4, 0xdd, 0xcb, 0x98, 0x0c, 0xe9,
	0xa0, 0x9d, 0x09, 0x77, 0x26, 0x95, 0x3e, 0x86, 0x4f, 0xe8, 0xab, 0xc8, 0x84, 0x34, 0x56, 0xd1,
	0x2e, 0xdc, 0xdd, 0xc3, 0xbd, 0xe7, 0xdc, 0xc3, 0x0f, 0x80, 0xe7, 0x76, 0xed, 0x67, 0xa8, 0xad,
	0x66, 0x0d, 0x37, 0x17, 0xa3, 0xf7, 0x46, 0xa0, 0xb5, 0x5a, 0x4b, 0x4c, 0x16, 0x1c, 0xed, 0x6e,
	0x92, 0xdb, 0x35, 0x1b, 0x03, 0xcd, 0x50, 0x6f, 0x65, 0x22, 0xb0, 0x4b, 0x06, 0x64, 0xd8, 0x1a,
	0x79, 0x7e, 0x65, 0xf0, 0xbf, 0x1e, 0xfb, 0x8b, 0xf2, 0x32, 0xaa, 0x3c, 0xac, 0x07, 0x54, 0x26,
	0x8f, 0x56, 0x3f, 0x0b, 0xd5, 0xfd, 0x37, 0x20, 0xc3, 0x46, 0xf4, 0x5f, 0x26, 0x2b, 0x27, 0xbd,
	0x73, 0xa0, 0x7b, 0x03, 0x03, 0xa8, 0xcf, 0xc3, 0x70, 0xfe, 0x30, 0x6d, 0xd7, 0x58, 0x13, 0xe8,
	0x6c, 0x72, 0x33, 0x0d, 0xc2, 0xf0, 0xbe, 0x4d, 0xbc, 0x00, 0xe8, 0x8a, 0xa7, 0xba, 0x28, 0xd3,
	0x07, 0x9a, 0x1b, 0x81, 0x8a, 0x6f, 0x44, 0x51, 0xa6, 0x11, 0x55, 0xda, 0xed, 0x32, 0x6e, 0xcc,
	0xab, 0xc6, 0xa4, 0x7c, 0x54, 0x69, 0x6f, 0x06, 0x4d, 0x97, 0x11, 0x89, 0x54, 0x1a, 0x2b, 0xf0,
	0xcf, 0x39, 0x17, 0xd0, 0x74, 0x3d, 0x22, 0x61, 0x32, 0xad, 0x8c, 0x60, 0x67, 0x50, 0x47, 0x61,
	0xf2, 0x17, 0x5b, 0xa6, 0x94, 0x6a, 0xf4, 0x4e, 0xe0, 0xd4, 0x1d, 0x0a, 0x65, 0x65, 0xcc, 0xad,
	0xd4, 0x6a, 0x29, 0x70, 0x2b, 0x63, 0xc1, 0x6e, 0xa1, 0x6d, 0x2b, 0x66, 0x4b, 0x99, 0xaa, 0x3b,
	0xc5, 0x7a, 0xbf, 0x02, 0xed, 0x77, 0x0e, 0x56, 0x87, 0x9f, 0xbd, 0x1a, 0xbb, 0x06, 0xb0, 0x3c,
	0xd5, 0x65, 0xc6, 0xc9, 0x61, 0x46, 0x89, 0xeb, 0x98, 0x7b, 0x0c, 0x14, 0xf7, 0x34, 0x3a, 0xdf,
	0xbc, 0x7b, 0x4c, 0x47, 0xfc, 0xc1, 0x15, 0x0c, 0x62, 0xbd, 0xf1, 0x73, 0x8c, 0xf5, 0x26, 0xe3,
	0x6a, 0xe7, 0xd0, 0xf9, 0xae, 0xcf, 0xa7, 0x25, 0xf8, 0x19, 0xc1, 0x82, 0x3c, 0xd5, 0x8b, 0xfd,
	0xe5, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0x9a, 0x17, 0x64, 0x81, 0x86, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AuthenticationServiceClient is the client API for AuthenticationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AuthenticationServiceClient interface {
	// reuqest response
	ThirdPartySignIn(ctx context.Context, in *ThirdPartyAuth, opts ...grpc.CallOption) (*AuthResponse, error)
	// reuqest response
	TagoSignIn(ctx context.Context, in *TagoAuth, opts ...grpc.CallOption) (*AuthResponse, error)
	// reuqest response
	Register(ctx context.Context, in *TagoRegister, opts ...grpc.CallOption) (*AuthResponse, error)
}

type authenticationServiceClient struct {
	cc *grpc.ClientConn
}

func NewAuthenticationServiceClient(cc *grpc.ClientConn) AuthenticationServiceClient {
	return &authenticationServiceClient{cc}
}

func (c *authenticationServiceClient) ThirdPartySignIn(ctx context.Context, in *ThirdPartyAuth, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/authproto.AuthenticationService/thirdPartySignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationServiceClient) TagoSignIn(ctx context.Context, in *TagoAuth, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/authproto.AuthenticationService/tagoSignIn", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *authenticationServiceClient) Register(ctx context.Context, in *TagoRegister, opts ...grpc.CallOption) (*AuthResponse, error) {
	out := new(AuthResponse)
	err := c.cc.Invoke(ctx, "/authproto.AuthenticationService/register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AuthenticationServiceServer is the server API for AuthenticationService service.
type AuthenticationServiceServer interface {
	// reuqest response
	ThirdPartySignIn(context.Context, *ThirdPartyAuth) (*AuthResponse, error)
	// reuqest response
	TagoSignIn(context.Context, *TagoAuth) (*AuthResponse, error)
	// reuqest response
	Register(context.Context, *TagoRegister) (*AuthResponse, error)
}

// UnimplementedAuthenticationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedAuthenticationServiceServer struct {
}

func (*UnimplementedAuthenticationServiceServer) ThirdPartySignIn(ctx context.Context, req *ThirdPartyAuth) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ThirdPartySignIn not implemented")
}
func (*UnimplementedAuthenticationServiceServer) TagoSignIn(ctx context.Context, req *TagoAuth) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TagoSignIn not implemented")
}
func (*UnimplementedAuthenticationServiceServer) Register(ctx context.Context, req *TagoRegister) (*AuthResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Register not implemented")
}

func RegisterAuthenticationServiceServer(s *grpc.Server, srv AuthenticationServiceServer) {
	s.RegisterService(&_AuthenticationService_serviceDesc, srv)
}

func _AuthenticationService_ThirdPartySignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ThirdPartyAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).ThirdPartySignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.AuthenticationService/ThirdPartySignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).ThirdPartySignIn(ctx, req.(*ThirdPartyAuth))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthenticationService_TagoSignIn_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagoAuth)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).TagoSignIn(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.AuthenticationService/TagoSignIn",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).TagoSignIn(ctx, req.(*TagoAuth))
	}
	return interceptor(ctx, in, info, handler)
}

func _AuthenticationService_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TagoRegister)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AuthenticationServiceServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/authproto.AuthenticationService/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AuthenticationServiceServer).Register(ctx, req.(*TagoRegister))
	}
	return interceptor(ctx, in, info, handler)
}

var _AuthenticationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "authproto.AuthenticationService",
	HandlerType: (*AuthenticationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "thirdPartySignIn",
			Handler:    _AuthenticationService_ThirdPartySignIn_Handler,
		},
		{
			MethodName: "tagoSignIn",
			Handler:    _AuthenticationService_TagoSignIn_Handler,
		},
		{
			MethodName: "register",
			Handler:    _AuthenticationService_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "auth.proto",
}
